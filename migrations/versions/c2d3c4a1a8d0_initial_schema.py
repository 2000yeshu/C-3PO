"""Initial schema

Revision ID: c2d3c4a1a8d0
Revises:
Create Date: 2020-07-18 22:31:43.046974

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c2d3c4a1a8d0"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "artist",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("image", sa.String(length=160), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "genre",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "song",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=320), nullable=True),
        sa.Column("release_date", sa.Date(), nullable=True),
        sa.Column("explicit", sa.Boolean(), nullable=True),
        sa.Column("popularity", sa.Float(), nullable=True),
        sa.Column("Image", sa.String(length=160), nullable=True),
        sa.Column("cover", sa.Boolean(), nullable=True),
        sa.Column("original_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["original_id"], ["song.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=32), nullable=False),
        sa.Column("facebook_id", sa.String(), nullable=True),
        sa.Column("image", sa.String(length=160), nullable=True),
        sa.Column("post_count", sa.Integer(), nullable=True),
        sa.Column("liked_count", sa.Integer(), nullable=True),
        sa.Column("likes_count", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("facebook_id"),
        sa.UniqueConstraint("id", "facebook_id", name="user_id"),
    )
    op.create_table(
        "artist_genre",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"],),
        sa.ForeignKeyConstraint(["genre_id"], ["genre.id"],),
        sa.PrimaryKeyConstraint("id", "artist_id", "genre_id"),
    )
    op.create_table(
        "artist_song",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("artist_id", sa.Integer(), nullable=False),
        sa.Column("song_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["artist_id"], ["artist.id"],),
        sa.ForeignKeyConstraint(["song_id"], ["song.id"],),
        sa.PrimaryKeyConstraint("id", "artist_id", "song_id"),
    )
    op.create_table(
        "link",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(length=160), nullable=True),
        sa.Column("platform", sa.Integer(), nullable=True),
        sa.Column("song_id", sa.Integer(), nullable=True),
        sa.Column("post_count", sa.Integer(), nullable=True),
        sa.Column("likes_count", sa.Integer(), nullable=True),
        sa.Column("views", sa.BigInteger(), nullable=True),
        sa.Column("custom_popularity", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(["song_id"], ["song.id"],),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "song_genre",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("song_id", sa.Integer(), nullable=False),
        sa.Column("genre_id", sa.Integer(), nullable=False),
        sa.Column("genre_count", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["genre_id"], ["genre.id"],),
        sa.ForeignKeyConstraint(["song_id"], ["song.id"],),
        sa.PrimaryKeyConstraint("id", "song_id", "genre_id"),
    )
    op.create_table(
        "user_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("link_id", sa.Integer(), nullable=False),
        sa.Column("reaction_type", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["link_id"], ["link.id"],),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id", "user_id", "link_id"),
    )
    op.create_table(
        "user_posts",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("link_id", sa.Integer(), nullable=False),
        sa.Column("share_date", sa.DateTime(), nullable=True),
        sa.Column("caption", sa.String(length=160), nullable=True),
        sa.Column("facebook_id", sa.String(length=160), nullable=True),
        sa.Column("likes_count", sa.Integer(), nullable=True),
        sa.Column("permalink_url", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["link_id"], ["link.id"],),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"],),
        sa.PrimaryKeyConstraint("id", "user_id", "link_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_posts")
    op.drop_table("user_likes")
    op.drop_table("song_genre")
    op.drop_table("link")
    op.drop_table("artist_song")
    op.drop_table("artist_genre")
    op.drop_table("user")
    op.drop_table("song")
    op.drop_table("genre")
    op.drop_table("artist")
    # ### end Alembic commands ###
